#version 400 core

in vec3 position;
in vec3 normal;

out vec3 norm;
out mat4 vpM;
out mat4 pM;
out vec4 tm;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;


void main(void){
vpM=viewMatrix;
pM=projectionMatrix;
	vec4 worldPosition=transformationMatrix*vec4(position,1.0);
 tm=worldPosition;
	vec4 positionRelativToCamera=viewMatrix*worldPosition;
	gl_Position =projectionMatrix* positionRelativToCamera;

	vec3 surfaceNormal=(viewMatrix*transformationMatrix*vec4(normal,0.0)).xyz;
	norm=normalize(surfaceNormal);
}